// <auto-generated />
using System;
using Crayon_Kids.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crayon_Kids.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220522120930_createdentiies")]
    partial class createdentiies
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crayon_Kids.Models.Allergy", b =>
                {
                    b.Property<int>("Allergy_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Allergy_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Allergy_Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Allergy_ID");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Assessment", b =>
                {
                    b.Property<int>("Assessment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assessment_Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Assessment_ID");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Class_Type", b =>
                {
                    b.Property<int>("Class_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Class_Type_ID");

                    b.ToTable("Class_Types");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Contact_No")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Employee_Type_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Employee_Type_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Employment_Status_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hire_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("School_ID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title_ID")
                        .HasColumnType("int");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Employee_Type_ID1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Employee_Type", b =>
                {
                    b.Property<int>("Employee_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Administrator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gardener")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Principal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee_Type_ID");

                    b.ToTable("Employee_Types");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Employee", b =>
                {
                    b.HasOne("Crayon_Kids.Models.Employee_Type", "Employee_Type")
                        .WithMany("Employees")
                        .HasForeignKey("Employee_Type_ID1");

                    b.Navigation("Employee_Type");
                });

            modelBuilder.Entity("Crayon_Kids.Models.Employee_Type", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
